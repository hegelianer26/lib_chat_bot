from vkbottle import Keyboard, Text, KeyboardButtonColor

class KeyboardBuilder:
    def __init__(self, vk_handler):
        self.vk_handler = vk_handler

    async def build_categories_keyboard(self, parent_id=None, current_path=None):
        try:
            keyboard = Keyboard(one_time=False, inline=False)
            categories = await self.vk_handler.get_categories(parent_id)

            if not parent_id:
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∏—Å–∫ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ" —Ç–æ–ª—å–∫–æ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
                keyboard.add(
                    Text("üîç –ü–æ–∏—Å–∫ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ", payload={"cmd": "catalog_search"}),
                    color=KeyboardButtonColor.PRIMARY
                )
                keyboard.row()

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ—Ä–Ω–µ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ parent_id –Ω–µ —É–∫–∞–∑–∞–Ω
            if parent_id is None:
                categories = [cat for cat in categories if cat.get('parent_id') is None]

            short_cats = []
            long_cats = []

            # –†–∞–∑–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            for category in categories:
                if len(category['name']) <= 16:
                    short_cats.append(category)
                else:
                    long_cats.append(category)

            # –î–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
            for i in range(0, len(short_cats), 2):
                row_cats = short_cats[i:i + 2]
                for cat in row_cats:
                    keyboard.add(
                        Text(
                            label=cat['name'],
                            payload={
                                "cmd": "show_category",
                                "cat_id": cat['id'],
                                "parent_id": parent_id if parent_id else 0,
                                "path": (current_path + [cat['name']]) if current_path else [cat['name']]
                            }
                        ),
                        color=KeyboardButtonColor.SECONDARY
                    )
                keyboard.row()

            # –û–¥–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
            for cat in long_cats:
                keyboard.add(
                    Text(
                        label=cat['name'],
                        payload={
                            "cmd": "show_category",
                            "cat_id": cat['id'],
                            "parent_id": parent_id if parent_id else 0,
                            "path": (current_path + [cat['name']]) if current_path else [cat['name']]
                        }
                    ),
                    color=KeyboardButtonColor.SECONDARY
                )
                keyboard.row()

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∏–ª–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            if parent_id:
                parent_category = await self.vk_handler.get_category_by_id(parent_id)
                if parent_category and parent_category.get('parent_id'):
                    keyboard.add(
                        Text(
                            label="‚¨Ö –ù–∞–∑–∞–¥",
                            payload={
                                "cmd": "go_back",
                                "parent_id": parent_category['parent_id'],
                                "path": current_path[:-1] if current_path else None
                            }
                        ),
                        color=KeyboardButtonColor.PRIMARY
                    )
                else:
                    keyboard.add(
                        Text("‚¨Ö –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", payload={"cmd": "main_menu"}),
                        color=KeyboardButtonColor.PRIMARY
                    )
            return keyboard

        except Exception as e:
            self.vk_handler.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {e}")
            keyboard = Keyboard(one_time=False, inline=False)
            keyboard.add(
                Text("‚ö† –û—à–∏–±–∫–∞! –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", payload={"cmd": "main_menu"}),
                color=KeyboardButtonColor.NEGATIVE
            )
            return keyboard